print("                                                    ")
print(" ░██████╗░██████╗░  ██╗░░██╗██╗░░░██╗██████╗░")
print(" ██╔════╝░██╔══██╗  ██║░░██║██║░░░██║██╔══██╗")
print(" ██║░░██╗░██████╦╝  ███████║██║░░░██║██████╦╝")
print(" ██║░░╚██╗██╔══██╗  ██╔══██║██║░░░██║██╔══██╗")
print(" ╚██████╔╝██████╦╝  ██║░░██║╚██████╔╝██████╦╝")
print(" ░╚═════╝░╚═════╝░  ╚═╝░░╚═╝░╚═════╝░╚═════╝░")

-- Coloque este script dentro de: StarterPlayerScripts (LocalScript)

local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer

-- CONFIGURAÇÃO: COLOQUE O ID DO JOGO PERMITIDO AQUI
local AllowedGameId = 10959918411 -- <=Troque para o ID do jogo

-- VALIDAÇÃO DE JOGO
if game.PlaceId ~= AllowedGameId then
LocalPlayer:Kick("O jogo '"..game.Name.."' não é o Studio Lite. Por favor entre no Studio Lite!!!")
return
end

-- TARGET GUI
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Target = PlayerGui:FindFirstChild("Your_Gui")
if not Target then
Target = Instance.new("ScreenGui")
Target.Name = "Your_Gui"
Target.Parent = PlayerGui
end

-- CORE GUI INSPECTOR
local CoreGui = game:GetService("CoreGui")
local Inspector = CoreGui:FindFirstChild("InspectorGui")
if Inspector then Inspector:Destroy() end
Inspector = Instance.new("ScreenGui")
Inspector.Name = "InspectorGui"
Inspector.ResetOnSpawn = false
Inspector.Parent = CoreGui

-- FRAME PRINCIPAL
local Frame = Instance.new("Frame")
Frame.Name = "Window"
Frame.Size = UDim2.fromOffset(250,300)
Frame.Position = UDim2.new(0,50,0,80)
Frame.BackgroundColor3 = Color3.fromRGB(28,28,28)
Frame.BorderSizePixel = 0
Frame.Visible = false
Frame.Parent = Inspector
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0,12)

-- BOTÃO GB HUB
local BtnGBHub = Instance.new("ImageButton")
BtnGBHub.Size = UDim2.new(0, 50, 0, 45)
BtnGBHub.Position = UDim2.new(0.5, -25, 0, -35)
BtnGBHub.BackgroundColor3 = Color3.fromRGB(60,60,60)
BtnGBHub.Image = "rbxthumb://104648175914694"
BtnGBHub.Parent = Inspector
Instance.new("UICorner", BtnGBHub)
local strokeGB = Instance.new("UIStroke", BtnGBHub)
strokeGB.Thickness = 2
strokeGB.Color = Color3.fromRGB(90,90,90)

BtnGBHub.MouseButton1Click:Connect(function()
Frame.Visible = not Frame.Visible
if Frame.Visible then
TweenService:Create(Frame,TweenInfo.new(0.3,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),
{Size=UDim2.fromOffset(250,300)}):Play()
end
end)

-- TÍTULO
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1,-140,0,40)
Title.Position = UDim2.new(0,12,0,0)
Title.BackgroundTransparency = 1
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 20
Title.TextColor3 = Color3.fromRGB(230,230,230)
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Text = "GB Hub [GUI > Script]"
Title.Parent = Frame

-- BOTÃO COPIAR
local BtnCopy = Instance.new("TextButton")
BtnCopy.Size = UDim2.fromOffset(90,32)
BtnCopy.Position = UDim2.new(0,12,0,44)
BtnCopy.BackgroundColor3 = Color3.fromRGB(40,140,60)
BtnCopy.Text = "Copiar"
BtnCopy.TextColor3 = Color3.new(1,1,1)
BtnCopy.Font = Enum.Font.SourceSansBold
BtnCopy.TextSize = 18
BtnCopy.Parent = Frame
Instance.new("UICorner", BtnCopy)

-- BOTÃO FECHAR
local BtnClose = Instance.new("TextButton")
BtnClose.Size = UDim2.fromOffset(40,40)
BtnClose.Position = UDim2.new(1,-46,0,6)
BtnClose.BackgroundColor3 = Color3.fromRGB(200,60,60)
BtnClose.Text = "X"
BtnClose.TextScaled = true
BtnClose.TextColor3 = Color3.new(1,1,1)
BtnClose.Font = Enum.Font.SourceSansBold
BtnClose.Parent = Frame
Instance.new("UICorner", BtnClose)

-- ARRASTAR PELO TOPO
local dragging = false
local dragStartPos
local frameStartPos
Frame.InputBegan:Connect(function(input)
if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
local mousePos = input.Position
if mousePos.Y <= Frame.AbsolutePosition.Y + 60 then
dragging = true
dragStartPos = mousePos
frameStartPos = Frame.Position
end
end
end)
Frame.InputChanged:Connect(function(input)
if dragging and (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) then
local delta = input.Position - dragStartPos
local goal = UDim2.new(
frameStartPos.X.Scale, frameStartPos.X.Offset + delta.X,
frameStartPos.Y.Scale, frameStartPos.Y.Offset + delta.Y
)
TweenService:Create(Frame,TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out),{Position=goal}):Play()
end
end)
Frame.InputEnded:Connect(function(input)
dragging = false
end)

-- CONFIRMAÇÃO AO FECHAR
local function createCloseConfirmation()
local ConfirmGui = Instance.new("ScreenGui")
ConfirmGui.Name = "ConfirmCloseGui"
ConfirmGui.ResetOnSpawn = false
ConfirmGui.Parent = CoreGui

local bg = Instance.new("Frame")      
bg.Size = UDim2.new(0,300,0,150)      
bg.Position = UDim2.new(0.5,-150,0.5,-75)      
bg.BackgroundColor3 = Color3.fromRGB(45,45,45)      
bg.Parent = ConfirmGui      
Instance.new("UICorner", bg)      
local stroke = Instance.new("UIStroke", bg)      
stroke.Color = Color3.fromRGB(70,70,70)      

local text = Instance.new("TextLabel")      
text.Size = UDim2.new(1,-20,0,70)      
text.Position = UDim2.new(0,10,0,10)      
text.Text = "Tem certeza que quer mesmo fechar?\nVocê pode perder todo o seu trabalho que você fez até agora."      
text.TextColor3 = Color3.fromRGB(255,255,255)      
text.Font = Enum.Font.SourceSansBold      
text.TextSize = 16      
text.TextWrapped = true      
text.BackgroundTransparency = 1      
text.Parent = bg      

local BtnYes = Instance.new("TextButton")      
BtnYes.Size = UDim2.new(0,120,0,40)      
BtnYes.Position = UDim2.new(0,20,1,-50)      
BtnYes.BackgroundColor3 = Color3.fromRGB(200,60,60)      
BtnYes.Text = "Sim, ok"      
BtnYes.TextColor3 = Color3.fromRGB(255,255,255)      
BtnYes.Font = Enum.Font.SourceSansBold      
BtnYes.TextSize = 16      
BtnYes.Parent = bg      
Instance.new("UICorner", BtnYes)      

local BtnNo = Instance.new("TextButton")      
BtnNo.Size = UDim2.new(0,120,0,40)      
BtnNo.Position = UDim2.new(1,-140,1,-50)      
BtnNo.BackgroundColor3 = Color3.fromRGB(60,200,60)      
BtnNo.Text = "Não, obrigado"      
BtnNo.TextColor3 = Color3.fromRGB(255,255,255)      
BtnNo.Font = Enum.Font.SourceSansBold      
BtnNo.TextSize = 16      
BtnNo.Parent = bg      
Instance.new("UICorner", BtnNo)      

BtnNo.MouseButton1Click:Connect(function()      
    ConfirmGui:Destroy()      
end)      

BtnYes.MouseButton1Click:Connect(function()      
    ConfirmGui:Destroy()      
    if Inspector then Inspector:Destroy() end      
    if Target then Target:Destroy() end      
end)

end

BtnClose.MouseButton1Click:Connect(createCloseConfirmation)

-- SCROLLING FRAME
local Scroll = Instance.new("ScrollingFrame")
Scroll.Name = "Scroll"
Scroll.Size = UDim2.new(1,-24,1,-90)
Scroll.Position = UDim2.new(0,12,0,84)
Scroll.BackgroundTransparency = 1
Scroll.ScrollBarThickness = 8
Scroll.CanvasSize = UDim2.new(1,20,0,0)
Scroll.AutomaticCanvasSize = Enum.AutomaticSize.None  -- agora manual
Scroll.Parent = Frame

-- LABEL DE CÓDIGO
local Code = Instance.new("TextBox")
Code.Name = "Code"
Code.BackgroundTransparency = 1
Code.TextXAlignment = Enum.TextXAlignment.Left
Code.TextYAlignment = Enum.TextYAlignment.Top
Code.Font = Enum.Font.Code
Code.TextColor3 = Color3.fromRGB(235,235,235)
Code.TextSize = 15
Code.TextWrapped = false
Code.Text = ""
Code.Interactable = false
Code.Size = UDim2.new(1,-8,0,300)
Code.Position = UDim2.new(0,4,0,0)
Code.Parent = Scroll
Code.AutomaticSize = Enum.AutomaticSize.Y

-- ATUALIZAÇÃO AUTOMÁTICA DO CANVASSIZE (vertical e horizontal)
task.spawn(function()
while task.wait(0.2) do
if Code and Scroll then
local textBoundsY = Code.TextBounds.Y
local textBoundsX = Code.TextBounds.X
local visibleHeight = Scroll.AbsoluteSize.Y
local visibleWidth = Scroll.AbsoluteSize.X
local neededHeight = math.max(textBoundsY + 20, visibleHeight)
local neededWidth = math.max(textBoundsX + 20, visibleWidth) -- <- horizontal automático
Scroll.CanvasSize = UDim2.new(0, neededWidth, 0, neededHeight)
end
end
end)
-- NOTIFICAÇÃO
local function notify(t,msg,dur)
pcall(function()
StarterGui:SetCore("SendNotification",{Title=t or "Aviso", Text=msg or "", Duration=dur or 2})
end)
end

-- =============================
-- PARTE 2 — SISTEMA DE GERAÇÃO DE CÓDIGO AUTOMÁTICO (CORRIGIDO)
-- Substitua a sua Parte 2 por este bloco
-- =============================

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local CoreGui = game:GetService("CoreGui")
local Inspector = CoreGui:WaitForChild("InspectorGui")
local Frame = Inspector:WaitForChild("Window")
local Scroll = Frame:WaitForChild("Scroll")
local Code = Scroll:WaitForChild("Code")
local BtnCopy = Frame:FindFirstChildOfClass("TextButton") or Frame:FindFirstChild("Copiar")

-- Detecta a GUI de destino (usa a mesma Target do seu script principal)
local Target = PlayerGui:FindFirstChild("Your_Gui")
if not Target then
    Target = Instance.new("ScreenGui")
    Target.Name = "Your_Gui"
    Target.Parent = PlayerGui
end

-- Classes UI que queremos tratar de forma direta (ex.: UICorner)
local UI_CLASSES = {
    UICorner = true, UIStroke = true, UIGradient = true, UIPadding = true,
    UIAspectRatioConstraint = true, UISizeConstraint = true, UIListLayout = true, UIGridLayout = true,
}

-- formatadores
local function formatEnum(v) return tostring(v) end
local function formatUDim(v) return string.format("UDim.new(%s, %s)", tostring(v.Scale), tostring(v.Offset)) end
local function formatUDim2(v) return string.format("UDim2.new(%s, %s, %s, %s)", tostring(v.X.Scale), tostring(v.X.Offset), tostring(v.Y.Scale), tostring(v.Y.Offset)) end
local function formatVector2(v) return string.format("Vector2.new(%s, %s)", tostring(v.X), tostring(v.Y)) end
local function formatVector3(v) return string.format("Vector3.new(%s, %s, %s)", tostring(v.X), tostring(v.Y), tostring(v.Z)) end
local function formatColor3(v) return string.format("Color3.fromRGB(%d, %d, %d)", math.floor(v.R * 255), math.floor(v.G * 255), math.floor(v.B * 255)) end
local function formatRect(v) return string.format("Rect.new(%s, %s, %s, %s)", tostring(v.Min.X), tostring(v.Min.Y), tostring(v.Max.X), tostring(v.Max.Y)) end

local function formatValue(v)
    local t = typeof(v)
    if t == "Color3" then return formatColor3(v)
    elseif t == "UDim2" then return formatUDim2(v)
    elseif t == "UDim" then return formatUDim(v)
    elseif t == "Vector2" then return formatVector2(v)
    elseif t == "Vector3" then return formatVector3(v)
    elseif t == "EnumItem" then return formatEnum(v)
    elseif t == "boolean" or t == "number" then return tostring(v)
    elseif t == "string" then return string.format("%q", v)
    elseif t == "Rect" then return formatRect(v)
    else return nil end
end

local function tryGet(obj, prop)
    local ok, val = pcall(function() return obj[prop] end)
    return ok, val
end

local CORE_PROPS = {
    "Name", "Size", "Position", "BackgroundColor3", "Visible", "ZIndex",
}

local EXTRA_PROPS = {
    "BackgroundTransparency","BorderSizePixel","BorderColor3","AnchorPoint","Rotation",
    "LayoutOrder","Active","ClipsDescendants","AutomaticSize","SizeConstraint","Selectable",
    "Text","TextColor3","TextSize","Font","RichText","TextWrapped","TextScaled",
    "TextXAlignment","TextYAlignment","LineHeight","PlaceholderText","PlaceholderColor3","ClearTextOnFocus",
    "CanvasSize","CanvasPosition","ScrollingEnabled","ScrollBarThickness","AutomaticCanvasSize",
    "Image","ImageColor3","ImageTransparency","ScaleType","SliceCenter","SliceScale","TileSize","ResampleMode",
    "Color","Thickness","Transparency","ApplyStrokeMode","LineJoinMode",
    "CornerRadius","Rotation","Offset",
    "PaddingTop","PaddingBottom","PaddingLeft","PaddingRight",
    "MaxSize","MinSize","MaxTextSize","MinTextSize","AspectRatio","AspectType","DominantAxis",
}

-- nomes seguros (gera identificadores válidos e únicos para variáveis)
local usedNames = {}
local function safeVar(base)
    base = tostring(base or "obj")
    -- substitui caracteres inválidos por underscore (mantém legibilidade)
    base = base:gsub("%s+", "")
    base = base:gsub("[^%w_]", "")
    if base == "" then base = "obj" end
    if base:match("^[0-9]") then base = "" .. base end
    local name = base
    local i = 1
    while usedNames[name] do
        i = i + 1
        name = base .. i
    end
    usedNames[name] = true
    return name
end

local varOf = {}
local counter = 0

local function emitProps(lines, indent, varName, obj, propList)
    for _, prop in ipairs(propList) do
        local ok, val = tryGet(obj, prop)
        if ok and val ~= nil then
            local formatted = formatValue(val)
            if formatted ~= nil then
                table.insert(lines, string.format("%s%s.%s = %s", indent, varName, prop, formatted))
            end
        end
    end
end

local function emitObject(lines, obj, parentVar, depth)
    depth = depth or 0
    local indent = string.rep("    ", depth)
    counter = counter + 1

    local defaultName = (obj.Name ~= "" and obj.Name) or obj.ClassName
    local varName = varOf[obj] or safeVar(defaultName)
    varOf[obj] = varName

    -- se for uma pequena UI auxiliar (UICorner/etc.) queremos criar diretamente com parent no constructor
    if UI_CLASSES[obj.ClassName] then
        if parentVar then
            table.insert(lines, string.format("%s-- [%d] %s (UI decorator)", indent, counter, obj.Name))
            table.insert(lines, string.format('%slocal %s = Instance.new(%q, %s)', indent, varName, obj.ClassName, parentVar))
        else
            table.insert(lines, string.format("%s-- [%d] %s (UI decorator)", indent, counter, obj.Name))
            table.insert(lines, string.format('%slocal %s = Instance.new(%q)', indent, varName, obj.ClassName))
        end
        -- propriedades extras (como CornerRadius)
        emitProps(lines, indent, varName, obj, EXTRA_PROPS)
        return
    end

    table.insert(lines, string.format("%s-- [%d] %s", indent, counter, obj.Name))
    table.insert(lines, string.format("%slocal %s = Instance.new(%q)", indent, varName, obj.ClassName))

    emitProps(lines, indent, varName, obj, CORE_PROPS)
    emitProps(lines, indent, varName, obj, EXTRA_PROPS)

    if parentVar then
        table.insert(lines, string.format("%s%s.Parent = %s", indent, varName, parentVar))
    end

    for _, child in ipairs(obj:GetChildren()) do
        emitObject(lines, child, varName, depth + 1)
    end
end

local function buildCode()
    usedNames, varOf, counter = {}, {}, 0
    local lines = {}
    local rootVar = safeVar(Target.Name or "Your_Gui")
    varOf[Target] = rootVar


table.insert(lines, "-- Criado Automaticamente Por GB Hub Oficial ☑️")
    table.insert(lines, "local Players = game:GetService(\"Players\")")
    table.insert(lines, "local PlayerGui = Players.LocalPlayer:WaitForChild(\"PlayerGui\")")
    table.insert(lines, string.format("local %s = Instance.new(\"ScreenGui\")", rootVar))
    table.insert(lines, string.format("%s.Name = %q", rootVar, Target.Name))
    table.insert(lines, string.format("%s.ResetOnSpawn = false", rootVar))
    table.insert(lines, string.format("%s.Parent = PlayerGui", rootVar))    

    for _, child in ipairs(Target:GetChildren()) do
        emitObject(lines, child, rootVar, 0)
    end

    return table.concat(lines, "\n")
end

local function refresh()
    local ok, txt = pcall(buildCode)
    if ok then
        Code.Text = txt
    else
        Code.Text = "-- ERRO AO GERAR CÓDIGO"
    end
end

-- atualiza regularmente (e atualiza também quando a Target mudar)
task.spawn(function()
    while true do
        refresh()
        task.wait(0.2)
    end
end)

-- opcional: também reagir a eventos para atualização imediata (mais responsivo)
local function connectTargetListeners(t)
    if not t then return end
    -- desconecta / reconecta para evitar duplicados
    pcall(function()
        t:GetPropertyChangedSignal("Name"):Connect(refresh)
        t.DescendantAdded:Connect(refresh)
        t.DescendantRemoving:Connect(refresh)
        t.ChildAdded:Connect(refresh)
        t.ChildRemoved:Connect(refresh)
    end)
end
connectTargetListeners(Target)

-- copiar para clipboard
if BtnCopy then
    BtnCopy.MouseButton1Click:Connect(function()
        local ok = false
        if typeof(setclipboard) == "function" then
            pcall(function() setclipboard(Code.Text) end)
            ok = true
        end
        if ok then
            pcall(function()
                StarterGui:SetCore("SendNotification", {
                    Title = "Copiado",
                    Text = "O código foi copiado para a área de transferência!",
                    Duration = 5
                })
            end)
        else
            pcall(function()
                StarterGui:SetCore("SendNotification", {
                    Title = "Aviso",
                    Text = "Não foi possível copiar automaticamente neste ambiente.",
                    Duration = 5
                })
            end)
        end
    end)
end
